plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "6.0.1.5171"
    id 'jacoco'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sonar {
    properties {
        property "sonar.projectKey", "pratice-jacoco_jacoco"
        property "sonar.organization", "pratice-jacoco"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    reports {
        html.required.set(true)
        csv.required.set(true)
        xml.required.set(true)
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/DemoApplication.class"
            ])
        }))
    }
}

//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            enabled = true
//            element = 'CLASS'
//
//            limit {
//                counter = 'LINE'
//                value = 'COVEREDRATIO'
//                minimum = 0.80
//            }
//
//            limit {
//                counter = 'BRANCH'
//                value = 'COVEREDRATIO'
//                minimum = 0.80
//            }
//
//            // 메인 애플리케이션 클래스를 완전히 제외
//            excludes = ['**/DemoApplication']
//        }
//    }
//}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
